object ScriptForm: TScriptForm
  Tag = 2
  Left = 622
  Height = 375
  Top = 114
  Width = 387
  ActiveControl = Memo1
  Caption = 'ScriptForm'
  ClientHeight = 375
  ClientWidth = 387
  Menu = ScriptMenu1
  OnActivate = FormActivate
  OnCloseQuery = FormCloseQuery
  OnCreate = FormCreate
  OnDeactivate = FormDeactivate
  OnHide = FormHide
  OnShow = FormShow
  Position = poScreenCenter
  LCLVersion = '2.1.0.0'
  object Splitter1: TSplitter
    Cursor = crVSplit
    Left = 0
    Height = 3
    Top = 296
    Width = 387
    Align = alBottom
    ResizeAnchor = akBottom
  end
  object Memo1: TMemo
    Left = 0
    Height = 296
    Top = 0
    Width = 387
    Align = alClient
    Constraints.MinHeight = 3
    Lines.Strings = (    )
    OnChange = Memo1Change
    OnClick = Memo1Click
    OnKeyUp = Memo1KeyUp
    ParentBidiMode = False
    ParentFont = False
    ScrollBars = ssAutoVertical
    TabOrder = 0
    WantTabs = True
    WordWrap = False
  end
  object Memo2: TMemo
    Left = 0
    Height = 76
    Top = 299
    Width = 387
    Align = alBottom
    Constraints.MinHeight = 3
    Lines.Strings = (    )
    ParentFont = False
    ReadOnly = True
    ScrollBars = ssAutoVertical
    TabOrder = 1
  end
  object ScriptMenu1: TMainMenu
    left = 104
    top = 32
    object File1: TMenuItem
      Caption = '&File'
      object New1: TMenuItem
        Caption = '&New'
        OnClick = New1Click
      end
      object NewPython1: TMenuItem
        Tag = 1
        Caption = 'New Python'
        OnClick = New1Click
      end
      object Open1: TMenuItem
        Caption = '&Open...'
        OnClick = Open1Click
      end
      object Save1: TMenuItem
        Caption = '&Save'
        OnClick = Save1Click
      end
      object SaveAs1: TMenuItem
        Caption = 'Save &As...'
        OnClick = SaveAs1Click
      end
      object Exit1: TMenuItem
        Caption = 'E&xit'
        OnClick = Exit1Click
      end
      object N1: TMenuItem
        Caption = '-'
      end
      object MRU1: TMenuItem
        Caption = 'MRU1'
      end
      object MRU2: TMenuItem
        Caption = 'MRU2'
      end
      object MRU3: TMenuItem
        Caption = 'MRU3'
      end
      object MRU4: TMenuItem
        Caption = 'MRU4'
      end
      object MRU5: TMenuItem
        Caption = 'MRU5'
      end
      object MRU6: TMenuItem
        Caption = 'MRU6'
      end
      object MRU7: TMenuItem
        Caption = 'MRU7'
      end
      object MRU8: TMenuItem
        Caption = 'MRU8'
      end
      object MRU9: TMenuItem
        Caption = 'MRU9'
      end
      object MRU10: TMenuItem
        Caption = 'MRU10'
      end
    end
    object Edit1: TMenuItem
      Caption = 'Edit'
      object Cut1: TMenuItem
        Caption = 'Cut'
        ShortCut = 16472
        OnClick = Cut1Click
      end
      object Copy1: TMenuItem
        Caption = 'Copy'
        ShortCut = 16451
        OnClick = Copy1Click
      end
      object Paste1: TMenuItem
        Caption = 'Paste'
        ShortCut = 16470
        OnClick = Paste1Click
      end
      object ListCommands1: TMenuItem
        Caption = 'List all commands'
        OnClick = ListCommands1Click
      end
      object showcolortable1: TMenuItem
        Caption = 'List color table'
        OnClick = showcolortable1Click
      end
    end
    object Insert1: TMenuItem
      Caption = 'Insert'
      object Forms1: TMenuItem
        Caption = 'Forms'
        object clipformvisible1: TMenuItem
          Tag = 1
          Caption = 'clipformvisible'
          Hint = 'clipformvisible (visible: boolean) Shows or hides the clipping form.'
          Visible = False
          OnClick = InsertCommand
        end
        object colorbarformvisible1: TMenuItem
          Tag = 1
          Caption = 'colorbarformvisible'
          Hint = 'colorbarformvisible (visible: boolean) Shows or hides the window that allows the user to interactively control the size and location of the colorbar. '
          Visible = False
          OnClick = InsertCommand
        end
        object contrastformvisible1: TMenuItem
          Tag = 1
          Caption = 'contrastformvisible'
          Hint = 'contrastformvisible (visible: boolean) Shows or hides the contrast and color window. '
          OnClick = InsertCommand
        end
        object cutoutformvisible1: TMenuItem
          Tag = 1
          Caption = 'cutoutformvisible'
          Hint = 'cutoutformvisible (visible: boolean) Shows or hides the cutout window.'
          Visible = False
          OnClick = InsertCommand
        end
        object edgeenhanceformvisible1: TMenuItem
          Tag = 1
          Caption = 'edgeenhanceformvisible'
          Hint = 'edgeenhanceformvisible (visible: boolean) Shows or hides the edge enhancement form that helps emphasize tissue boundaries. '
          Visible = False
          OnClick = InsertCommand
        end
        object mosaicformvisible1: TMenuItem
          Tag = 1
          Caption = 'mosaicformvisible'
          Hint = 'mosaicformvisible (visible: boolean) Shows or hides the mosaic designer window.'
          Visible = False
          OnClick = InsertCommand
        end
        object overlayformvisible1: TMenuItem
          Tag = 1
          Caption = 'overlayformvisible'
          Hint = 'overlayformvisible (visible: boolean) Shows or hides the overlay window.'
          Visible = False
          OnClick = InsertCommand
        end
        object scriptformvisible1: TMenuItem
          Tag = 1
          Caption = 'scriptformvisible'
          Hint = 'scriptformvisible (visible: boolean) Shows or hides the scripting window.'
          OnClick = InsertCommand
        end
        object toolformvisible1: TMenuItem
          Tag = 1
          Caption = 'toolformvisible'
          Hint = 'toolformvisible (visible: boolean) Shows or hides the tools panel.'
          OnClick = InsertCommand
        end
      end
      object Colorbar1: TMenuItem
        Caption = 'Colorbar'
        object colorbarvisible1: TMenuItem
          Tag = 1
          Caption = 'colorbarvisible'
          Hint = 'colorbarvisible (visible: boolean) Shows a colorbar on the main images.'
          OnClick = InsertCommand
        end
        object colorbarcoord1: TMenuItem
          Tag = 2
          Caption = 'colorbarposition'
          Hint = 'colorbarposition (p: integer) Sets the position of the colorbar: 1=bottom, 2=left, 3=top, 4=right.'
          OnClick = InsertCommand
        end
        object colorbarsize1: TMenuItem
          Tag = 3
          Caption = 'colorbarsize'
          Hint = 'colorbarsize (f) Change width of color bar f is a value 0.01..0.5 that specifies the fraction of the screen used by the colorbar'
          OnClick = InsertCommand
        end
        object colorbartext1: TMenuItem
          Tag = 1
          Caption = 'colorbartext'
          Hint = 'colorbartext (visible: boolean) If set to true, then colorbars will include text that indicates intensity range.'
          Visible = False
          OnClick = InsertCommand
        end
      end
      object Contrast1: TMenuItem
        Caption = 'Contrast'
        object setcolortable1: TMenuItem
          Tag = 2
          Caption = 'setcolortable'
          Hint = 'setcolortable (tablenum: integer) changes the color scheme used to display an image.'
          OnClick = InsertCommand
        end
        object changenode1: TMenuItem
          Tag = 66
          Caption = 'changenode'
          Hint = 'changenode (index, intensity, r, g, b, a: integer) This command adjusts a point in the color table.'
          OnClick = InsertCommand
        end
        object addnode1: TMenuItem
          Tag = 56
          Caption = 'addnode'
          Hint = 'addnode (intensity, r, g, b, a: integer) this command adds a new point to the color table.'
          OnClick = InsertCommand
        end
        object contrastminmax1: TMenuItem
          Tag = 23
          Caption = 'contrastminmax'
          Hint = 'contrastminmax (min, max: float) sets the minumum nd maximum value for the color lookup table.'
          OnClick = InsertCommand
        end
        object colorname1: TMenuItem
          Tag = 4
          Caption = 'colorname'
          Hint = 'colorname (filename: string) Loads  the requested colorscheme for the background image.'
          OnClick = InsertCommand
        end
        object edgedetect1: TMenuItem
          Tag = 22
          Caption = 'edgedetect'
          Hint = 'edgedetect (thresh: float; dilatecycles: integer) This procedure attempts to hide regions of consistent color from your image.'
          Visible = False
          OnClick = InsertCommand
        end
      end
      object Dialogs1: TMenuItem
        Caption = 'Dialogs'
        object modalmessage1: TMenuItem
          Tag = 4
          Caption = 'modalmessage'
          Hint = 'modalmessage (str: string) Shows a modal dialog, script stops until user presses ''OK'' button to dismiss dialog.'
          OnClick = InsertCommand
        end
        object modelessmessage1: TMenuItem
          Tag = 4
          Caption = 'modelessmessage'
          Hint = 'modelessmessage (str: string) Shows text in the rendering window. This text is displayed until the text is changed.'
          OnClick = InsertCommand
        end
      end
      object Overlays1: TMenuItem
        Caption = 'Overlays'
        object overlayload1: TMenuItem
          Tag = 4
          Caption = 'overlayload'
          Hint = 'overlayload (filename: string) integer; Will add the overlay named filename and return the number of the overlay.'
          OnClick = InsertCommand
        end
        object overlayloadcluster1: TMenuItem
          Tag = 142211
          Caption = 'overlayloadcluster'
          Hint = 'overlayloadcluster (filename: string; threshold, clusterMM3: float; lSaveToDisk: boolean) integer; Will add the overlay named filename, only display voxels with intensity greater than threshold with a cluster volume greater than clusterMM and return the number of the overlay.'
          OnClick = InsertCommand
        end
        object overlayloadvol1: TMenuItem
          Caption = 'overlayloadvol'
          OnClick = InsertCommand
        end
        object overlaycloseall1: TMenuItem
          Caption = 'overlaycloseall'
          Hint = 'overlaycloseall () This function has no parameters. All open overlays will be closed.'
          OnClick = InsertCommand
        end
        object overlaycolornumber1: TMenuItem
          Tag = 22
          Caption = 'overlaycolornumber'
          Hint = 'overlaycolornumber (overlay, color_index: integer) Sets the color scheme for a overlay.'
          OnClick = InsertCommand
        end
        object overlaycolorname1: TMenuItem
          Tag = 1214
          Caption = 'overlaycolorname'
          Hint = 'overlaycolorname (overlay: integer; filename: string) Set the colorscheme for the target overlay to a specified name.'
          OnClick = InsertCommand
        end
        object overlayminmax1: TMenuItem
          Tag = 1223
          Caption = 'overlayminmax'
          Hint = 'overlayminmax (overlay: integer; min, max: float) Sets the color range for the overlay.'
          OnClick = InsertCommand
        end
        object overlaytransparencyonbackground1: TMenuItem
          Tag = 2
          Caption = 'overlaytransparencyonbackground'
          Hint = 'overlaytransparencyonbackground (percent: integer) Controls the opacity of the overlays on the background.'
          OnClick = InsertCommand
        end
        object overlaytransparencyonoverlay1: TMenuItem
          Tag = 2
          Caption = 'overlaytransparencyonoverlay'
          Hint = 'overlaytransparencyonoverlay (percent: integer) Controls the opacity of the overlays on other overlays.'
          OnClick = InsertCommand
        end
        object overlaycolorfromzero1: TMenuItem
          Tag = 1
          Caption = 'overlaycolorfromzero'
          Hint = 'overlaycolorfromzero (fromzero: boolean) If set to false, then the full color range is used to show the overlay.'
          OnClick = InsertCommand
        end
        object overlayloadsmooth1: TMenuItem
          Tag = 1
          Caption = 'overlayloadsmooth'
          Hint = 'overlayloadsmooth (smooth: boolean) Determines whether overlays are interpolated using trilinear interpolation.'
          OnClick = InsertCommand
        end
        object overlaymaskedbybackground1: TMenuItem
          Tag = 1
          Caption = 'overlaymaskedbybackground'
          Hint = 'overlaymaskedbybackground (mask: boolean) If true, than a overlay will be transparent on any voxel where the background image is transparent.'
          OnClick = InsertCommand
        end
        object overlayvisible1: TMenuItem
          Tag = 1211
          Caption = 'overlayvisible'
          Hint = 'overlayvisible (overlay: integer; visible: boolean) The feature allows you to make individual overlays visible or invisible.'
          OnClick = InsertCommand
        end
        object overlayhidezeros1: TMenuItem
          Tag = 1
          Caption = 'overlayhidezeros'
          Hint = 'overlayhidezeros (mask: boolean) If true, values with intensity of zero are always transparent.'
          OnClick = InsertCommand
        end
        object overlaylayertransparencyonoverlay1: TMenuItem
          Tag = 22
          Caption = 'overlaylayertransparencyonoverlay'
          Hint = 'overlaylayertransparencyonoverlay (layer, percent: integer) allows you to make a specific overlay volume have a custom transparency on other overlay images.'
          OnClick = InsertCommand
        end
        object overlaylayertransparencyonbackground1: TMenuItem
          Tag = 22
          Caption = 'overlaylayertransparencyonbackground'
          Hint = 'overlaylayertransparencyonbackground (overlaylayer, percent: integer) Specifies a custom transparency for a single overlay layer on top of the background image'
          OnClick = InsertCommand
        end
      end
      object Shaders1: TMenuItem
        Caption = 'Shaders'
        object shadername1: TMenuItem
          Tag = 4
          Caption = 'shadername'
          Hint = 'shadername (filename: string) Loads the requested shader.'
          OnClick = InsertCommand
        end
        object shaderlightazimuthelevation1: TMenuItem
          Tag = 22
          Caption = 'shaderlightazimuthelevation'
          Hint = 'shaderlightazimuthelevation (azi, elev: integer) Changes location of light source.'
          OnClick = InsertCommand
        end
        object shaderadjust1: TMenuItem
          Tag = 1413
          Caption = 'shaderadjust'
          Hint = 'shaderadjust (property: string; value: float) Sets one of the user-adjustable properties.'
          OnClick = InsertCommand
        end
        object shaderquality1to101: TMenuItem
          Tag = 7
          Caption = 'shaderquality1to10'
          Hint = 'shaderquality1to10 (value: integer) Renderings can be quick or slow but precise, corresponding to values 1-10.'
          OnClick = InsertCommand
        end
        object shaderupdategradients1: TMenuItem
          Caption = 'shaderupdategradients'
          Hint = 'shaderupdategradients () This command re-calculates the gradients for surface direction and magnitude.'
          OnClick = InsertCommand
        end
      end
      object Sliceviews1: TMenuItem
        Caption = '2D'
        object orthoview1: TMenuItem
          Tag = 33
          Caption = 'orthoview'
          Hint = 'orthoview (x, y, z: float) Shows a 2D projection view of the brain.'
          OnClick = InsertCommand
        end
        object orthoviewmm1: TMenuItem
          Tag = 33
          Caption = 'orthoviewmm'
          Hint = 'orthoviewmm (x, y, z: float) Shows a 2D projection view of the brain. Crosshair at X,Y,Z coordinates specified in millimeters.'
          OnClick = InsertCommand
        end
        object mosaic1: TMenuItem
          Tag = 5
          Caption = 'mosaic'
          Hint = 'mosaic (str: string) Shows a series of 2D slices.'
          OnClick = InsertCommand
        end
        object slicetext1: TMenuItem
          Tag = 1
          Caption = 'slicetext'
          Hint = 'slicetext (visible: boolean) If true, the 2D slices will be displayed with text.'
          OnClick = InsertCommand
        end
        object xbarthick1: TMenuItem
          Tag = 2
          Caption = 'linewidth'
          Hint = 'linewidth (pixels: integer) Adjusts thickness of crosshairs shown on 2D slices. Set to zero to hide crosshairs.'
          OnClick = InsertCommand
        end
        object xbarcolor1: TMenuItem
          Tag = 36
          Caption = 'linecolor'
          Hint = 'linecolor (r, g, b: integer) Changes the color for the crosshairs shown on 2D slices. For example linecolor(255, 0, 0) will show red crosshairs.'
          OnClick = InsertCommand
        end
        object radiological1: TMenuItem
          Tag = 1
          Caption = 'radiological'
          Hint = 'radiological (visible: boolean) If true, the 2D slices displayed in radiological convention (left on right: camera inferior/anterior to object) otherwise neurological (superior/posterior)'
          OnClick = InsertCommand
        end
      end
      object Render1: TMenuItem
        Caption = '3D'
        object azimuth1: TMenuItem
          Tag = 2
          Caption = 'azimuth'
          Hint = 'azimuth (degree: integer) This command rotates the rendering.'
          OnClick = InsertCommand
        end
        object azimuthelevation1: TMenuItem
          Tag = 22
          Caption = 'azimuthelevation'
          Hint = 'azimuthelevation (azi, elev: integer) Sets the viewer location.'
          OnClick = InsertCommand
        end
        object cameradistance1: TMenuItem
          Tag = 3
          Caption = 'cameradistance'
          Hint = 'cameradistance (z: float) Sets the viewing distance from the object.'
          OnClick = InsertCommand
        end
        object clip1: TMenuItem
          Tag = 3
          Caption = 'clip'
          Hint = 'clip (depth: float) Creates a clip plane that hides information close to the viewer.'
          OnClick = InsertCommand
        end
        object clipazimuthelevation1: TMenuItem
          Tag = 33
          Caption = 'clipazimuthelevation'
          Hint = 'clipazimuthelevation (depth, azi, elev: float) Set a view-point independent clip plane.'
          OnClick = InsertCommand
        end
        object cutout1: TMenuItem
          Tag = 63
          Caption = 'cutout'
          Hint = 'cutout (l, a, s, r, p, i: float) Selects a sector to remove from rendering view.'
          OnClick = InsertCommand
        end
        object edgeenhance1: TMenuItem
          Tag = 26
          Caption = 'edgeenhance'
          Hint = 'edgeenhance (bias, gain: integer) Attempts to emphasize tissue boundaries in 3D renderings by making regions with consistent brightness transparent.'
          Visible = False
          OnClick = InsertCommand
        end
        object elevation1: TMenuItem
          Tag = 2
          Caption = 'elevation'
          Hint = 'elevation (deg: integer) changes the render camera up or down.'
          OnClick = InsertCommand
        end
        object extract1: TMenuItem
          Tag = 2211
          Caption = 'extract'
          Hint = 'extract (levels, dilatevox: integer; oneobject: boolean) Attempts to remove noise speckles from dark regions (air) around object. Levels=1..5 (larger for larger surviving image), Dilate=0..12 (larger for larger surround). You can also specify if there is a single object or multiple objects '
          OnClick = InsertCommand
        end
        object framevisible1: TMenuItem
          Tag = 1
          Caption = 'framevisible'
          Hint = 'framevisible (visible: boolean) Shows or hides the cube that appears around the rendered object.'
          Visible = False
          OnClick = InsertCommand
        end
        object maximumintensity1: TMenuItem
          Tag = 1
          Caption = 'maximumintensity'
          Hint = 'maximumintensity (mip_on: boolean) Changes the rendering mode between standard and Maximum Intensity Projection.'
          OnClick = InsertCommand
        end
        object perspective1: TMenuItem
          Tag = 1
          Caption = 'perspective'
          Hint = 'perspective (on: boolean) Turns on or off perspective rendering.'
          OnClick = InsertCommand
        end
        object viewaxial1: TMenuItem
          Tag = 1
          Caption = 'viewaxial'
          Hint = 'viewaxial (std: boolean) creates rendering from an axial viewpoint.'
          OnClick = InsertCommand
        end
        object viewcoronal1: TMenuItem
          Tag = 1
          Caption = 'viewcoronal'
          Hint = 'viewcoronal (std: boolean) creates rendering from a coronal viewpoint.'
          OnClick = InsertCommand
        end
        object viewsagittal1: TMenuItem
          Tag = 1
          Caption = 'viewsagittal'
          Hint = 'viewsagittal (std: boolean) creates rendering from an sagittal viewpoint.'
          OnClick = InsertCommand
        end
      end
      object Advanced1: TMenuItem
        Caption = 'Advanced'
        object bmpzoom1: TMenuItem
          Tag = 2
          Caption = 'bmpzoom'
          Hint = 'bmpzoom (z: integer) copy and save bitmaps at higher resolution than screen. bmpzoom(2) will save images at twice the resolution.'
          OnClick = InsertCommand
        end
        object exists1: TMenuItem
          Tag = 4
          Caption = 'exists'
          Hint = 'exists (filename): boolean Returns true if file exists.'
          OnClick = InsertCommand
        end
        object fontname1: TMenuItem
          Tag = 4
          Caption = 'fontname'
          Hint = 'fontname (filename) Changes font used for colorbar. For example, "fontname(''ubuntu'')" will use the Ubuntu font.'
          OnClick = InsertCommand
        end
        object loaddrawing1: TMenuItem
          Tag = 4
          Caption = 'loaddrawing'
          Hint = 'loaddrawing (filename) Load an image for editing with the drawing tools'
          OnClick = InsertCommand
        end
        object loaddti1: TMenuItem
          Tag = 4
          Caption = 'loaddti'
          Hint = 'loaddti (filename: string) If you provide a name of a FSL-format FA image, the corresponding V1 will be loaded'
          OnClick = InsertCommand
        end
        object loadimagevol1: TMenuItem
          Tag = 1412
          Caption = 'loadimagevol'
          Hint = 'loadimagevol (filename: string; vol: integer) Use to load a specific volume in a 4D dataset, for example loadimagevol(''fmri.nii'',4) will load the 4th volume of an fMRI dataset.'
          OnClick = InsertCommand
        end
        object quit1: TMenuItem
          Caption = 'quit'
          Hint = 'quit () Terminates the program. Use with caution. This allows external programs to launch this software and quit once they are done.'
          OnClick = InsertCommand
        end
        object savebmp1: TMenuItem
          Tag = 4
          Caption = 'savebmp'
          Hint = 'savebmp (filename: string) Saves the currently viewed image as a PNG format compressed bitmap image.'
          OnClick = InsertCommand
        end
        object savebmpxy1: TMenuItem
          Tag = 1422
          Caption = 'savebmpxy'
          Hint = 'savebmpxy (filename: string; x, y: integer) Saves the currently viewed image as a PNG bitmap image. Specify the image width (x) and height (y). Does not work for mosaic images (where resolution defined by volume dimensions).'
          OnClick = InsertCommand
        end
        object savenii1: TMenuItem
          Tag = 141213
          Caption = 'savenii'
          Hint = 'savenii (filename: string; filter: integer; scale: float) Save currently open background image as NIfTI format image. Filename: name of output (e.g. ''myfile.nii''). Filter: -1=auto, 0=Nearest, 1=Linear, 2=Hermite, 3=Bell, 4=Spline, 5=Lanczos, 6=Mitchell. Example: savenii(''my.nii'',1,0.5) will create image half-scale image using linear filter. If filter is -1, then Lanczos is used for downsampling and Mitchell is used for up sampling. If scale is negative, an isotropic image is generated.'
          OnClick = InsertCommand
        end
        object sharpen1: TMenuItem
          Caption = 'sharpen'
          Hint = 'sharpen () Emphasize edges in image'
          OnClick = InsertCommand
        end
        object version1: TMenuItem
          Caption = 'version'
          Hint = 'version () : string Returns the software version.'
          OnClick = InsertCommand
        end
      end
      object loadimage1: TMenuItem
        Tag = 4
        Caption = 'loadimage'
        Hint = 'loadimage (filename: string) Opens a NIfTI format image to view.'
        OnClick = InsertCommand
      end
      object wait1: TMenuItem
        Tag = 2
        Caption = 'wait'
        Hint = 'wait (msec: integer) The program pauses for the specified duration. For example wait(1000) delays the script for one second.'
        OnClick = InsertCommand
      end
      object backcolor1: TMenuItem
        Tag = 36
        Caption = 'backcolor'
        Hint = 'backcolor (r, g, b: integer) Changes the background color, for example backcolor(255, 0, 0) will set a bright red background'
        OnClick = InsertCommand
      end
      object resetdefaults1: TMenuItem
        Caption = 'resetdefaults'
        Hint = 'resetdefaults () Sets all of the user adjustable settings to their default values.'
        OnClick = InsertCommand
      end
    end
    object Toosl1: TMenuItem
      Caption = '&Script'
      object Compile1: TMenuItem
        Caption = 'Run'
        ShortCut = 16466
        OnClick = Compile1Click
      end
      object N2: TMenuItem
        Caption = '-'
      end
      object Stop1: TMenuItem
        Caption = 'Halt'
        ShortCut = 16456
        OnClick = Stop1Click
      end
    end
  end
  object OpenDialog1: TOpenDialog
    DefaultExt = '.gls'
    FileName = '*.gls'
    Filter = 'scripts (*.gls)|*.gls'
    Options = [ofHideReadOnly, ofNoChangeDir, ofPathMustExist, ofFileMustExist, ofDontAddToRecent]
    left = 40
    top = 104
  end
  object SaveDialog1: TSaveDialog
    DefaultExt = '.gls'
    FileName = '*.gls'
    Filter = 'scripts (*.gls)|*.gls'
    Options = [ofHideReadOnly, ofPathMustExist]
    left = 40
    top = 144
  end
  object PSScript1: TPSScript
    CompilerOptions = []
    OnCompile = PSScript1Compile
    Plugins = <>
    UsePreProcessor = False
    left = 39
    top = 64
  end
end
